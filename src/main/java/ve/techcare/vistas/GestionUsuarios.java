package ve.techcare.vistas;

import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.time.LocalDateTime;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ve.techcare.servicios.utilidades.ConexionBaseDatos;

/**
 *
 * @author Carlos Hernandez
 */
public class GestionUsuarios extends javax.swing.JFrame implements Observador{

    /**
     * Creates new form GestionUsuarios
     */
    public static int id;

    public GestionUsuarios() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        llenarTabla();
        hacerCliqueableTabla();
        setIcon();
        setNoEditableTabla();
        fechaFooter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        titulo_lb = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaUsuarios_tbl = new javax.swing.JTable();
        footer_lb = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelFondo.setBackground(new java.awt.Color(255, 255, 255));
        panelFondo.setPreferredSize(new java.awt.Dimension(1040, 665));
        panelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo_lb.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titulo_lb.setForeground(new java.awt.Color(0, 0, 0));
        titulo_lb.setText("Gestion de Usuarios Registrados");
        panelFondo.add(titulo_lb, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 370, 40));

        listaUsuarios_tbl.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        listaUsuarios_tbl.setForeground(new java.awt.Color(0, 0, 0));
        listaUsuarios_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nro", "Nombres", "DNI", "Estatus", "Roles"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaUsuarios_tbl.setRowHeight(28);
        jScrollPane1.setViewportView(listaUsuarios_tbl);
        if (listaUsuarios_tbl.getColumnModel().getColumnCount() > 0) {
            listaUsuarios_tbl.getColumnModel().getColumn(0).setResizable(false);
            listaUsuarios_tbl.getColumnModel().getColumn(0).setPreferredWidth(1);
            listaUsuarios_tbl.getColumnModel().getColumn(1).setResizable(false);
            listaUsuarios_tbl.getColumnModel().getColumn(1).setPreferredWidth(190);
            listaUsuarios_tbl.getColumnModel().getColumn(2).setResizable(false);
            listaUsuarios_tbl.getColumnModel().getColumn(2).setPreferredWidth(40);
            listaUsuarios_tbl.getColumnModel().getColumn(3).setResizable(false);
            listaUsuarios_tbl.getColumnModel().getColumn(3).setPreferredWidth(5);
            listaUsuarios_tbl.getColumnModel().getColumn(4).setResizable(false);
            listaUsuarios_tbl.getColumnModel().getColumn(4).setPreferredWidth(9);
        }

        panelFondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 940, 440));

        footer_lb.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        footer_lb.setForeground(new java.awt.Color(0, 0, 0));
        footer_lb.setText("TechCare® System ");
        panelFondo.add(footer_lb, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 630, 240, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel footer_lb;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listaUsuarios_tbl;
    private javax.swing.JPanel panelFondo;
    private javax.swing.JLabel titulo_lb;
    // End of variables declaration//GEN-END:variables

    private void fechaFooter() {
        LocalDateTime fechaHora = LocalDateTime.now();
        int year = fechaHora.getYear();
        String fechaFormateada = String.valueOf(year);

        footer_lb.setText("TechCare® System " + fechaFormateada);
    }

    /* Este metodo se encarga de llenar la tabla con los
    *  desde la base de datos.
    *  
    *  Esta tabla que aqui se usa tiene columnas que son redimencionables,
    *  es decir, que se les pueden cambiar el tamaño con el cursor del mouse
     */
    private void llenarTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nro");
        modelo.addColumn("Nombres");
        modelo.addColumn("DNI");
        modelo.addColumn("Estatus");
        modelo.addColumn("Roles");

        try (Connection conexion = ConexionBaseDatos.conectar(); PreparedStatement ps = conexion.prepareStatement("SELECT id,full_name, dni, status, role FROM users"); ResultSet rs = ps.executeQuery();) {

            ResultSetMetaData metaData = rs.getMetaData();
            int cantidadDeColumnas = metaData.getColumnCount();

            while (rs.next()) {
                Object[] filas = new Object[cantidadDeColumnas];

                for (int i = 0; i < cantidadDeColumnas; i++) {

                    filas[i] = rs.getObject(i + 1);

                }
                modelo.addRow(filas);

                listaUsuarios_tbl.setModel(modelo);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al llenar tabla: en GestionaUsuarios, contacte al desarrollador");
            System.out.println("Error en el metodo llenar modelo ");
            System.out.println("en la clase SQL :" + e);
        }
    }

    /*
    * Este metodo permite que la tabla sea cliqueble, es decir,
    * que al dar clic en una de sus filas esta pueda ejecutar una accion.
     */
    private void hacerCliqueableTabla() {

        listaUsuarios_tbl.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {

                int fila = listaUsuarios_tbl.rowAtPoint(e.getPoint());
                int columna = 0;

                if (fila > -1) {
                    id = (int) listaUsuarios_tbl.getModel().getValueAt(fila, columna);

                    mostrarVentanaInformacionUsuario();
                }
            }
        });
    }

    private void setIcon() {
        try {
            BufferedImage originalImage = ImageIO.read(getClass().getResource("/imagenes/icono.png"));
            Image scaledImage = originalImage.getScaledInstance(27, 27, Image.SCALE_SMOOTH); // Cambia el tamaño según tus necesidades
            this.setIconImage(scaledImage);

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void setNoEditableTabla() {
        // Obtener el modelo actual de la tabla
        DefaultTableModel currentModel = (DefaultTableModel) listaUsuarios_tbl.getModel();

        // Obtener los datos y nombres de las columnas del modelo actual
        int rowCount = currentModel.getRowCount();
        int columnCount = currentModel.getColumnCount();
        Object[][] data = new Object[rowCount][columnCount];
        String[] columnNames = new String[columnCount];

        for (int i = 0; i < rowCount; i++) {
            for (int j = 0; j < columnCount; j++) {
                data[i][j] = currentModel.getValueAt(i, j);
            }
        }

        for (int i = 0; i < columnCount; i++) {
            columnNames[i] = currentModel.getColumnName(i);
        }

        // Crear un nuevo modelo de tabla no editable
        DefaultTableModel model = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Todas las celdas no son editables
            }
        };

        // Asignar el nuevo modelo a la tabla
        listaUsuarios_tbl.setModel(model);
    }

    @Override
    public void actualizar() {
        llenarTabla();
    }
    
    private void mostrarVentanaInformacionUsuario() {
        Subject subject = new Subject();
        subject.addObserver(this);
        InformacionUsuario informacionUsuario = new InformacionUsuario(subject);
        informacionUsuario.setVisible(true);
    }

}
